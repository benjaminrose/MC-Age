language: python

#matrix and generic is the best way to get travis to work with python & OSX
matrix:
  fast_finish: true
  allow_failures:
    - os: osx
    - env: MAIN_CMD="pylint fsps-age.py"
  include:
      - os: linux
        python: 3.6
        # pytest verbose report-on-xfail converage-configuration coverage-plugin runslow-tests
        env: MAIN_CMD="pytest -v -rx --cov-config=.coveragerc --cov --runslow"
      - os: osx
        # will be python3 from homebrew
        # homebrew now needs ruby2.3 not default (from generic) of 2.0.
        language: ruby
        rvm: 2.3
        env: 
          # Only run tests, not coverage
          - MAIN_CMD="pytest -v --runslow"
      # - os: linux
      #   python: 3.6
      #   env: MAIN_CMD="pylint fspsage.py"

# the old stuff
# os: 
#   - linux
#   - osx
# python:
#   - "3.5"
#   - "3.6"

notifications:
  email: never
  slack: 
    rooms: ndastrophysics:E9JMFDBpGWYdRcDneK7CTFdr
    on_success: change
    on_failure: always

# branches:
#   only:
#     - master

# get gfortran for linux builds
addons:
    apt:
        packages:
            - gfortran

# get gfortran, python3 & pystest for mac builds
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc && brew upgrade python && pip3 install --upgrade pip && pip3 install pytest; fi

install: 
  #install dust maps
  - bash setup_dust.sh
  #download fsps
  - git clone https://github.com/cconroy20/fsps libfsps
  - cd libfsps/src
  # replace with a travis specific makefile
  # thanks to https://github.com/dfm/python-fsps/blob/master/.travis.yml
  - cp ../../.travis.Makefile Makefile
  - make all
  - cd ../..
  - export SPS_HOME=`pwd`/libfsps
  # install other packages
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pip3 install -r requirements.txt; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install -r requirements.txt; fi
  # install coverage uploader & pytest plugin to test coverage.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install -r test-requirements.txt; fi

# https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received
# It took 10 mins for one long test on my 2016 Macbook with an Intel Core m5, whole test is ~40 mins.
# There are two times when I need to create the stellar population (taking 10 mins each)
# It looks like the total test suite currently takes 25 mins on Travis-CI
script: travis_wait 60 $MAIN_CMD

after_script: if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then codecov --token=38195770-d996-401c-b093-c245b36046f7; fi
